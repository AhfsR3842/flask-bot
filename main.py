from flask import Flask, request
import requests
import os
from apscheduler.schedulers.background import BackgroundScheduler
from datetime import datetime
import pytz  # ‚Üê –¥–æ–±–∞–≤–ª—è–µ–º

app = Flask(__name__)

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram ===
BOT_TOKEN = "7693406334:AAEjWcw4rt7hUHGwnUN9z5uGR7ePY_Zi0qY"
TELEGRAM_API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
MY_CHAT_ID = "330754245"

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ===
@app.route('/')
def home():
    return "–ê–ª–µ–∫—Å –≤ —Å–µ—Ç–∏."

@app.route('/bot', methods=['POST'])
def telegram_webhook():
    data = request.get_json()
    print("==> –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", data, flush=True)

    try:
        if "message" in data:
            chat_id = data["message"]["chat"]["id"]
            print("==> CHAT_ID:", chat_id, flush=True)
            text = data["message"].get("text", "")
            reply = f"–ê–ª–µ–∫—Å –ø–æ–ª—É—á–∏–ª: {text}"

            requests.post(TELEGRAM_API_URL, json={
                "chat_id": chat_id,
                "text": reply
            })

    except Exception as e:
        print("==> –û—à–∏–±–∫–∞:", e, flush=True)

    return "OK", 200

# === –ê–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ ===
def send_daily_message():
    now = datetime.now(pytz.timezone('Europe/Kyiv')).strftime('%d.%m.%Y %H:%M')
    text = f"üåû –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, –ê–Ω–¥—Ä–µ–π!\n–°–µ–≥–æ–¥–Ω—è {now}, —Ç—ã ‚Äî –∫–∞–∫ –≤—Å–µ–≥–¥–∞, –º–∞—à–∏–Ω–∞ üî•"
    print("==> –û—Ç–ø—Ä–∞–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è", flush=True)

    requests.post(TELEGRAM_API_URL, json={
        "chat_id": MY_CHAT_ID,
        "text": text
    })

# === –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –∑–æ–Ω–æ–π ===
scheduler = BackgroundScheduler(timezone='Europe/Kyiv')
scheduler.add_job(send_daily_message, 'cron', hour=17, minute=44)  # –ø–æ –ö–∏–µ–≤—É
scheduler.start()

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 10000))
    app.run(host='0.0.0.0', port=port)
